# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# ----------------------------------------------------------------------
# This configuration file uses the Adjustable-Block Encoding CPA
# for predicate analysis with CEGAR as described in
# "Predicate Abstraction with Adjustable-Block Encoding" (Beyer et.al.).
# Verifying Multi-Threaded Programs.
# ----------------------------------------------------------------------

analysis.algorithm.CEGAR = true

# ARGCPA is necessary for refinement and has to be the top-level CPA
cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.threading.ThreadingCPA, cpa.predicate.PredicateCPA

# this automaton defines which locations are the error locations
specification = specification/default.spc

#include includes/resource-limits.properties

analysis.traversal.order = bfs
# useReversePostorder = true
analysis.traversal.useCallstack = true

cpa.callstack.unsupportedFunctions={}
cfa.useCFACloningForMultiThreadedPrograms=true

cpa.predicate.blk.alwaysAtFunctions = false
cpa.predicate.blk.alwaysAtLoops     = true

counterexample.export.allowImpreciseCounterexamples=true

#include includes/predicateAnalysis-PredAbsRefiner.properties

# Enable MultiEdges, this gives a little bit of performance.
cpa.composite.aggregateBasicBlocks = false
