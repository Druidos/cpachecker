#include witness2test.properties

cpa.smg.enableMallocFail = false
cpa.smg.handleUnknownFunctions = assume_safe
cpa.smg.guessSizeOfUnknownMemorySize = false
cpa.smg.trackPredicates = true
cpa.smg.verifyPredicates = true
cpa.smg.handleNonFreedMemoryInMainAsMemLeak=true
# This is the configuration used when verifying memory safety properties (actually this configuration).
memorysafety.config = svcomp19--memorysafety.properties

# Memory allocation functions
cpa.smg.memoryAllocationFunctions = malloc,__kmalloc,kmalloc,kzalloc,kzalloc_node,ldv_zalloc,ldv_malloc,realloc

# Array allocation functions
cpa.smg.arrayAllocationFunctions = calloc,kmalloc_array,kcalloc

# Allocation functions which set memory to zero
cpa.smg.zeroingMemoryAllocation = calloc,kzalloc,kcalloc,kzalloc_node,ldv_zalloc

# Deallocation functions
cpa.smg.deallocationFunctions = free,kfree,kfree_const

# Don't use BAM but only ARGCPA, as BAM doesn't work with SMGCPA
cpa = cpa.arg.ARGCPA
# Also use SMGCPA to find property violation in memsafety category
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.smg.SMGCPA

#include includes/witness-validation.properties

overflow.config = witness2test--memorysafety.properties
