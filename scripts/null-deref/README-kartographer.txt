Зависимости: CIF (в архиве cif.zip) и Python 3.

Kartographer предназначен для построения графа вызовов функций для проектов для языке Си. Для работы Kartographer нужен файл с командами сборки проекта - командами компиляции (CC) и линковки (LD). Если проект собирается не с помощью make, а с помощью другого инструмента, то данный файл нужно подготовить вручную.

Иначе (проект собирается с помощью make) этот файл можно получить следующим образом:

- Выполнить в директории с исходным кодом проекта make clean или аналогичную команду для удаления информации о предыдущих сборках.
- Сконфигурировать исходный код проекта, если это необходимо перед его сборкой.
- Запустить извлечение команд сборки проекта. Для этого нужно воспользоваться программой bce.py из репозитория Kartographer. При запуске необходимо передать ей путь до директории с исходным кодом проекта. Пример: "python3 bce.py --sources ~/git/linux-4.7". bce.py перейдет в указанную с помощью --sources директорию и выполнит команду "make". Если для сборки проекта команды "make" недостаточно, то с помощью опционального параметра --make можно передать инструменту нужную команду запуска. Пример: "python3 bce.py --sources ~/git/linux-4.7 --make 'make RELEASE_LEVEL=0 PLATFORM=MDR220B'" Для сборки некоторых проектов требуется установить некоторые переменные окружения, это можно сделать следующим образом: "ENV_VARIABLE=23 python3 bce.py --sources ~/git/linux-4.7"
- После завершения работы bce.py в директории, из которой осуществлялся запуск, появится два файла: cmds.json и raw_cmds.txt. Если обоих файлов нет, или файл cmds.json аномально пуст - что-то при сборке пошло не так

 Kartographer запускается следующей командой: "python3 kartographer.py --bc cmds.json --cif ~/inst/cif/bin/cif", где опция --bc отвечает за путь до полученного на прошлом этапе файла с командами сборки проекта cmds.json, а опция --cif - до исполняемого файла CIF. После завершения работы, в директории, из которой осуществлялся запуск, появится директория workdir. workdir/km.json - искомый граф вызовов функций. Кроме km.json, в workdir присутствует довольно большое количество прочих файлов, которые могут пригодиться в случае различных ошибок.
